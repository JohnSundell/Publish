name: GitHub Release

on:
  push:
    tags:
      - '*'

jobs:
  # build-linux:
  #   runs-on: ubuntu-latest
  #   container: 'swift:5.3-bionic'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Build Binary
  #       run: |
  #         swift build --configuration release
  #         mv `swift build --configuration release --show-bin-path`/publish-clie ./publish

  #     - uses: actions/upload-artifact@v2
  #       with:
  #         name: publish-linux
  #         path: publish

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Binary
        run: |
          swift build --configuration release
          mv `swift build --configuration release --show-bin-path`/publish-cli ./publish

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: publish-macos
      #     path: publish

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./publish
          asset_name: publish-macos
          asset_content_type: application/x-binary
